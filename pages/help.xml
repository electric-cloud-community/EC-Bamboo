<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=us-ascii" http-equiv="content-type"/>
    <title>@PLUGIN_KEY@ Plugin</title>
    <link rel="stylesheet" href="../../plugins/@PLUGIN_NAME@/pluginhelp.css" type="text/css" media="screen"/>
</head>
<body>
<!--
    Generated by PluginWizardHelp
    https://github.com/electric-cloud/PluginWizardHelp
    Do *NOT* edit manually, use help file generation.
-->
<div class="help">
    <h1>@PLUGIN_KEY@</h1>
    <p>Plugin version @PLUGIN_VERSION@</p>
    
    <p>Revised on Jul 09, 2019</p>
    
    <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade"/>
    <h1>Contents</h1>
    <ul>
    
    <li><a href="#overview">Overview</a></li>
    <li><a href="#SupportedVersions">Supported Versions</a></li>
    
    
    
    
    
    
    
    <li><a href="#CreateConfiguration">Plugin Configuration</a></li>
    

    
    <li><a href="#procedures">Plugin Procedures</a></li>
    <li>Build Plans management<br/><i>These procedures help in managing a Build process.</i></li><ul><li><a href="#RunPlan">RunPlan</a></li><li><a href="#EnablePlan">EnablePlan</a></li><li><a href="#DisablePlan">DisablePlan</a></li><li><a href="#GetAllPlans">GetAllPlans</a></li><li><a href="#GetPlanDetails">GetPlanDetails</a></li><li><a href="#GetPlanRuns">GetPlanRuns</a></li></ul><li>Deployment Plans management<br/><i>These procedures help in managing a Deployment process.</i></li><ul><li><a href="#GetDeploymentProjectsForPlan">GetDeploymentProjectsForPlan</a></li><li><a href="#CreateRelease">CreateRelease</a></li><li><a href="#TriggerDeployment">TriggerDeployment</a></li></ul><li>Other</li><ul><li><a href="#CollectReportingData">CollectReportingData</a></li></ul>

    
    
    
    
    
    
    
    <li><a href="#releaseNotes">Release Notes</a></li>
</ul>

    
    <h1>Overview</h1>
    <p><p>This plugin integrates CloudBees Flow with Atlassian Bamboo.</p>
<p>Atlassian Bamboo is a continuous integration (CI) and deployment (CD) server that can be used to automate the release management for a software application, creating a continuous delivery pipeline.</p>
<p>For more information about Atlassian Bamboo go to <a href="https://www.atlassian.com/software/bamboo" target="_blank">Bamboo home page</a>. For better Atlassian Bamboo understanding go to  <a href="https://confluence.atlassian.com/bamboo/understanding-the-bamboo-ci-server-289277285.html" target="_blank">Atlassian Documentation</a></p>
</p>
    <div id="SupportedVersions">
<h1>Supported Versions</h1>
<p>This plugin was developed and tested against following Bamboo Server versions:</p>
<ul>
<li>Atlassian Bamboo 6.8.1</li>
</ul>
<p>According to the Atlassian Bamboo changelog, the following changes define the minimal compatible versions:</p>
<ul>
<li>
<a href="https://developer.atlassian.com/server/bamboo/bamboo-api-changes-for-5-11/" target="_blank">Bamboo 5.11</a>
: Versions prior to this are not compatible with the TriggerDeployment procedure.</li>
<li>
<a href="https://developer.atlassian.com/server/bamboo/bamboo-api-changes-for-bamboo-3-0/" target="_blank">Bamboo 3.0</a>
: Changes in the process of receiving Plan Build results make versions, prior to this, incompatible with RunPlan, GetPlanRuns and CollectReportingData procedures.</li>
</ul>

</div>
    
    
    
    
    

    <!--TODO custom blocks-->

    
    <div id="CreateConfiguration">
        <a name='CreateConfiguration' id="CreateConfiguration"> </a>
        <h1>Plugin Configurations</h1>

        <p>
            Plugin configurations are sets of parameters that apply
            across some or all of the plugin procedures. They
            reduce repetition of common values, create
            predefined parameter sets for end users, and
            securely store credentials where needed. Each configuration
            is given a unique name that is entered in designated
            parameters on procedures that use them.<br /><br />
        </p>

        <h3>Creating Plugin Configurations</h3>
        <p>To create plugin configurations in CloudBees Flow,
            do these steps:</p>

        <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
        <li>Find the @PLUGIN_NAME@ row.</li>
        <li>Click <b>Configure</b> to open the
             Configurations page.</li>
        <li>Click <b>Create Configuration</b> as per the description of parameters below.</li>
        
        Configuration Parameters
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                    <td class="required">Configuration Name</td>
                    <td>Configuration name.</td>
                
            </tr>
            
            <tr>
                
                    <td >Description</td>
                    <td>Description for the configuration.</td>
                
            </tr>
            
            <tr>
                
                    <td class="required">Bamboo Server URL</td>
                    <td>Atlassian Bamboo server URL e.g. 'http://bamboo-server.example.com:8085'.</td>
                
            </tr>
            
            <tr>
                
                    <td class="required">Credential</td>
                    <td>Provide the credentials CloudBees uses to communicate with the Bamboo server.</td>
                
            </tr>
            
            <tr>
                
                    <td >Debug Level</td>
                    <td>Level of the plugin procedure's verbosity.</td>
                
            </tr>
            
            <tr>
                
                    <td >HTTP Proxy</td>
                    <td>An HTTP proxy that will be used for the connections.</td>
                
            </tr>
            
            <tr>
                
                    <td >Proxy Authorization</td>
                    <td>Provide the credentials CloudBees uses to authenticate proxy requests.</td>
                
            </tr>
            
            </tbody>
        </table>
        
    </div>
    

    

    <h1 id="procedures">Plugin Procedures</h1>
    
    
    <p>
        <p><b>IMPORTANT</b> Note that the names of Required parameters are marked in <span class="required">bold italics</span> in the parameter description table for each procedure.<br/></p>

    </p>
    

    
    <div id="RunPlan">
        <h2>RunPlan</h2>
        
        
        <p>This procedure runs Bamboo build plan.</p>
        
        
        <h3>RunPlan Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Project Key</td>
                <td>Project key (short name) of project that contains build plan.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Plan Key</td>
                <td>Short key of plan to run.</td>
                
            </tr>
            
            <tr>
                
                <td >Custom Revision</td>
                <td>Run build against a custom branch (revision).</td>
                
            </tr>
            
            <tr>
                
                <td >Additional Variables</td>
                <td>Override global and/or plan variables for this Run. New values should be specified as name-value pairs, with 1 pair per line.<br/>Example: <br/><b>system.debug=true</b><br/><b>BuildConfiguration=debug</b><br/><b>BuildPlatform=x64</b><br/></td>
                
            </tr>
            
            <tr>
                
                <td class="required">Wait For Build</td>
                <td>If checked, the procedure will wait until the build is finished or until the wait time exceeds the value specified in the Wait Timeout, whichever is earlier.</td>
                
            </tr>
            
            <tr>
                
                <td >Wait Timeout</td>
                <td>Timeout in seconds to wait for build to finish. Will be used if "Wait for build" is checked. Default waiting time is 300 secs.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Format</td>
                <td>Format to save the results.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Property sheet to store the results.</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>buildResultKey</td>
                <td>Composite key for the Run Result.</td>
            </tr>
            
            <tr>
                <td>buildUrl</td>
                <td>Link to the result page.</td>
            </tr>
            
            </tbody>
        </table>
        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/RunPlan/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="EnablePlan">
        <h2>EnablePlan</h2>
        
        
        <p>This procedure enables build plan.</p>
        
        
        <h3>EnablePlan Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Project Key</td>
                <td>Project key (short name) of project that contains build plan.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Plan Key</td>
                <td>Short name of plan.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/EnablePlan/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="DisablePlan">
        <h2>DisablePlan</h2>
        
        
        <p>This procedure disables build plan.</p>
        
        
        <h3>DisablePlan Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Project Key</td>
                <td>Project key (short name) of project that contains build plan.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Plan Key</td>
                <td>Short name of plan.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/DisablePlan/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="GetAllPlans">
        <h2>GetAllPlans</h2>
        
        
        <p>Returns all plans that are available for current user.</p>
        
        
        <h3>GetAllPlans Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td >Project Key</td>
                <td>Project key (short name) of project to filter plans.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Format</td>
                <td>Format to save the results.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Property sheet to store the results. Each plan will be saved under a separate property (property sheet). Additionally, the planKeys property will contain comma-separated plan keys.</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>planKeys</td>
                <td>List of comma-separated plan keys</td>
            </tr>
            
            </tbody>
        </table>
        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/GetAllPlans/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="GetPlanDetails">
        <h2>GetPlanDetails</h2>
        
        
        <p>This procedure prints Bamboo build plan details.</p>
        
        
        <h3>GetPlanDetails Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Project Key</td>
                <td>Project key (short name) of project that contains build plan.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Plan Key</td>
                <td>Short name of plan to get details.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Format</td>
                <td>Format to save the results.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Property sheet to store the results.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/GetPlanDetails/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="GetPlanRuns">
        <h2>GetPlanRuns</h2>
        
        
        <p>This procedure returns information about runs on Bamboo build plan.</p>
        
        
        <h3>GetPlanRuns Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Project Key</td>
                <td>Project key (short name) of project that contains build plan.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Plan Key</td>
                <td>Short name of plan to get details.</td>
                
            </tr>
            
            <tr>
                
                <td >Results Limit</td>
                <td>Limit the count of retrieved plan results by this value. Set to '0' to retrieve all results.</td>
                
            </tr>
            
            <tr>
                
                <td >Build State Filter</td>
                <td>Get only plan runs with this state</td>
                
            </tr>
            
            <tr>
                
                <td >Result Format</td>
                <td>Format to save the results.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Property sheet to store the results. Each plan run will be saved under a separate property (property sheet). Additionally, the planKeys property will contain comma-separated plan keys.</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>resultKeys</td>
                <td>List of comma-separated plan build result keys.</td>
            </tr>
            
            <tr>
                <td>latestResultKey</td>
                <td>Key for the latest build run.</td>
            </tr>
            
            </tbody>
        </table>
        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/GetPlanRuns/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="GetDeploymentProjectsForPlan">
        <h2>GetDeploymentProjectsForPlan</h2>
        
        
        <p>This procedure returns information about deployment projects linked to this build plan.</p>
        
        
            <p>Additional property 'environmentNames' (located inside each deployment project property sheet) will contain comma-separated names of the environments for the deployment project.</p>

        
        <h3>GetDeploymentProjectsForPlan Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Project Key</td>
                <td>Project key (short name) of project that contains build plan.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Plan Key</td>
                <td>Short name of plan.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Format</td>
                <td>Format to save the results.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Property sheet to store the results.</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>deploymentProjectKeys</td>
                <td>List of comma-separated deployment project keys for the plan</td>
            </tr>
            
            </tbody>
        </table>
        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/GetDeploymentProjectsForPlan/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="CreateRelease">
        <h2>CreateRelease</h2>
        
        
        <p>This procedure creates new release (version) from the build plan result.</p>
        
        
        <h3>CreateRelease Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Deployment Project Name</td>
                <td>Name of the deployment project where release will be created.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Plan Build Key</td>
                <td>Identifier of the Plan Build result. e.g. 'PROJECT-PLAN-22'</td>
                
            </tr>
            
            <tr>
                
                <td >Request Release Name?</td>
                <td>Procedure will request name for the next release (version) from the Bamboo deployment project.</td>
                
            </tr>
            
            <tr>
                
                <td >Release Name</td>
                <td>Name for new release (version) to create. e.g. 'release-22'. If the "Request Release Name?" is checked, this value will be ignored.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Format</td>
                <td>Format to save the results.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Result property sheet to save created release properties.</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>release</td>
                <td>Name of the created release.</td>
            </tr>
            
            </tbody>
        </table>
        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/CreateRelease/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="TriggerDeployment">
        <h2>TriggerDeployment</h2>
        
        
        <p>This procedure runs Bamboo deployment plan.</p>
        
        
        <h3>TriggerDeployment Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Deployment Project Name</td>
                <td>Name of the deployment project.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Environment Name</td>
                <td>Name of the environment for the deployment.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Release Name</td>
                <td>Name of the release (version) to be deployed.</td>
                
            </tr>
            
            <tr>
                
                <td >Wait For Deployment</td>
                <td>If checked, the procedure will wait until the deployment is finished or until the wait time exceeds the value specified in the Wait Timeout, whichever is earlier.</td>
                
            </tr>
            
            <tr>
                
                <td >Wait Timeout</td>
                <td>Timeout in seconds to wait for deployment to finish. Will be used if "Wait for build" is checked. Default waiting time is 300 secs.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Format</td>
                <td>Format to save the results.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Property sheet to store the results.</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>deploymentResultKey</td>
                <td>Key of the deployment result.</td>
            </tr>
            
            <tr>
                <td>deploymentResultUrl</td>
                <td>URL to the deployment result report.</td>
            </tr>
            
            </tbody>
        </table>
        

        
        <p>
            <h4>Usage Example</h4>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/TriggerDeployment/Form.png" />
</p>

        </p>
        
    </div>

    
    <div id="CollectReportingData">
        <h2>CollectReportingData</h2>
        
        
        <p>This procedure collects reporting data for the DevOpsInsight Dashboards. It collects build results with optional tests run details.</p>
        
        
        <h3>CollectReportingData Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Project Key</td>
                <td>Project key (short name) of project that contains build plan.</td>
                
            </tr>
            
            <tr>
                
                <td >Plan Key</td>
                <td>Short name of plan to get details. Might be simply planKey or composite planKey-jobKey.</td>
                
            </tr>
            
            <tr>
                
                <td >Retrieve Test Results?</td>
                <td>If checked - test data will be also collected.</td>
                
            </tr>
            
            <tr>
                
                <td >Test Category</td>
                <td>The category for tests of the collected build runs. Example: 'unit-test' or 'system-test'.
</td>
                
            </tr>
            
            <tr>
                
                <td >Transformation script</td>
                <td>Allows user to provide perl script for payload customization.
This method will be invoked by plugin with 2 parameters. 1st parameter is context object, 2nd is payload object.
Method should be named &quot;transform&quot;, and should return payload object. In this example myTimestamp field will be added to payload object:
<pre>
  sub transform {
      my ($context, $payload) = @_;
      $payload-&gt;{myTimestamp} = $context-&gt;one();
      return $payload;
  }
  sub one {
      my ($context) = @_;
      return time();
  }
</pre></td>
                
            </tr>
            
            <tr>
                
                <td >Initial Count</td>
                <td>Count of old builds to retrieve from server on the first run. If omited it will be set to 10.</td>
                
            </tr>
            
            <tr>
                
                <td >Metadata Property Path</td>
                <td>Property sheet where run metadata will be stored. If omitted, /mySchedule/EC-Bamboo-%planKey%-build will be used for schedule context. For all other contexts root is /myProject.</td>
                
            </tr>
            
            <tr>
                
                <td >Base URL for drill-down</td>
                <td>Base URL for the Bamboo. If empty it will be set to %url_from_configuration%/browse/%projectKey%[-%planKey%].</td>
                
            </tr>
            
            <tr>
                
                <td >Preview</td>
                <td>If checked, no data will be sent to the reporting system. Use this option to preview gathered data.</td>
                
            </tr>
            
            <tr>
                
                <td >Debug</td>
                <td>If checked, the log level will be set to "Debug" for the job.</td>
                
            </tr>
            
            <tr>
                
                <td >Release Name</td>
                <td>Name of the CloudBees Flow release collected data relates to.</td>
                
            </tr>
            
            <tr>
                
                <td >Release Project Name</td>
                <td>Name of the CloudBees Flow release project collected data relates to.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
        <p>
            <p>Normally, this procedure will be used as a DOIS DataSource.
You can follow the CloudBees Flow user guide to add the datasource.</p>
<p>
<img src="../../plugins/@PLUGIN_KEY@/images/CollectReportingData/DataSourceForm.png" />
</p>

        </p>
        
    </div>

    

    

    

    

    
    
    
    

    <h1 id="releaseNotes">Release Notes</h1>
    
    <h3>@PLUGIN_KEY@ 1.5.0</h3>
    <ul>
        
        <li>Added Result Format and Result Property Sheet parameters for all the procedures which returns information from Bamboo.</li>
        
        <li><p>New procedures for the deployment process automation:</p>
<ul>
  <li>GetDeploymentProjectsForPlan</li>
  <li>CreateRelease</li>
  <li>TriggerDeployment</li>
</ul>
</li>
        
        <li><p>Introduced enhancements for the RunPlan procedure:</p>
<ul>
  <li>Posibility to run a build against custom VCS revision (branch).</li>
  <li>Supplying the additional run variables for the build.</li>
  <li>Showing live progress as the Plan Build runs.</li>
  <li>Posibility to omit waiting for the Plan Run to finish.</li>
</ul>
</li>
        
        <li><p>Following procedures now produce output parameters:</p>
<ul>
  <li>GetAllPlans</li>
  <li>GetPlanDetails</li>
  <li>GetPlanRuns</li>
  <li>RunPlan</li>
</ul>
</li>
        
        <li>New procedure CollectReportingData for the DevOps Insight Server integration was added.</li>
        
        <li>Proxy support was added.</li>
        
        <li>Cleanup was performed.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.4.2</h3>
    <ul>
        
        <li>The plugin icon has been updated.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.4.1</h3>
    <ul>
        
        <li>Output for ElectricFlow Pipelines has been improved.</li>
        
        <li>Missing documentation has been added.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.4.0</h3>
    <ul>
        
        <li>EnablePlan procedure has been added.</li>
        
        <li>DisablePlan procedure has been added.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.3.0</h3>
    <ul>
        
        <li>GetAllPlans procedure has been added.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.2.0</h3>
    <ul>
        
        <li>Improved error handling.</li>
        
        <li>Fixed an issue when credentials are not available from RunPlan procedure.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.1.0</h3>
    <ul>
        
        <li>GetPlanDetails and GetPlanRuns procedures have been added.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.0</h3>
    <ul>
        
        <li>RunPlan procedure has been added.</li>
        
    </ul>
    
</div>
</body>
</html>
